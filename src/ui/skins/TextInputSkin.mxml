<?xml version="1.0" encoding="utf-8"?>

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             xmlns:ui="ui.components.*"
             alpha.disabledStates="0.5"
             blendMode="normal"
             creationComplete="onCreationComplete(event)">

    <fx:Metadata>
    <![CDATA[
        [HostComponent("ui.components.IconTextInput")]
        ]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
        import global.Color;
        import global.Icons;

        import mx.events.FlexEvent;

        import spark.events.TextOperationEvent;

        private function onTextChange(event:TextOperationEvent):void
        {
            validateButtonClear();
            validateIconColor();
        }

        private function validateButtonClear():void
        {
            buttonClear.visible = textDisplay.text.length > 0;
        }

        private function validateIconColor():void
        {
            iconDisplay.color = textDisplay.text.length > 0 ? Color.textHigh : Color.textMedium;
        }

        private function onCreationComplete(event:FlexEvent):void
        {
            callLater(function ():void
            {
                onTextChange(null);
            });
        }

        private function clear():void
        {
            textDisplay.text = "";
            dispatchEvent(new TextOperationEvent(TextOperationEvent.CHANGE, true));
            onTextChange(null);
        }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled"
                 stateGroups="disabledStates"/>
        <s:State name="normalWithPrompt"/>
        <s:State name="disabledWithPrompt"
                 stateGroups="disabledStates"/>
    </s:states>


    <s:Group width="100%"
             height="100%">

        <!-- Fill -->
        <s:Rect id="background"
                width="100%"
                height="100%"
                radiusX="5"
                radiusY="5">
            <s:fill>
                <s:SolidColor color="{Color.fillInset}"/>
            </s:fill>
        </s:Rect>

        <!-- Border -->
        <s:Rect width="100%"
                height="100%"
                radiusX="5"
                radiusY="5">
            <s:stroke>
                <s:SolidColorStroke color="{Color.fillMedium}"
                                    weight="1"/>
            </s:stroke>
        </s:Rect>

        <s:HGroup width="100%"
                  height="100%"
                  padding="7"
                  paddingLeft="13"
                  verticalAlign="middle"
                  gap="7">

            <ui:ColorBitmapImage width="16"
                                 height="16"
                                 source="{hostComponent.icon}"
                                 includeInLayout="{hostComponent.icon}"
                                 visible="{hostComponent.icon}"
                                 id="iconDisplay"/>

            <s:VGroup width="100%"
                      paddingTop="3">
                <s:RichEditableText id="textDisplay"
                                    width="100%"
                                    change="onTextChange(event)"
                                    color="{Color.textHigh}"/>
            </s:VGroup>

            <s:Button id="buttonClear"
                      skinClass="ui.skins.ButtonSkinIcon"
                      icon="{Icons.Multiply}"
                      width="16"
                      height="16"
                      click="{clear()}"/>

        </s:HGroup>

    </s:Group>

</s:SparkSkin>
