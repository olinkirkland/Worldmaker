<?xml version="1.0"?>
<popups:Popup xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:popups="ui.popups.*"
              xmlns:ui="ui.components.*"
              width="320">

    <fx:Script><![CDATA[
        import data.ProjectData;
        import data.ProjectManager;

        import global.Color;
        import global.Icons;

        import mx.events.FlexEvent;

        import spark.events.TextOperationEvent;

        public var callbackConfirm:Function = null;
        public var importedWorld:Object;

        override public function onCreationComplete(event:FlexEvent):void
        {
            super.onCreationComplete(event);

            if (importedWorld)
                groupImport.visible = groupImport.includeInLayout = false;
            else
                validateDetails();

            validateGroupName();

        }

        private function validateDetails():void
        {
            // Fill out details of imported world
            groupDetails.visible = groupDetails.includeInLayout = importedWorld;
        }

        private function validateGroupName():void
        {
            groupName.visible = groupName.includeInLayout = false;
            inputName.text = getNextName();
            validateName();
        }

        private function getNextName():String
        {
            var baseName:String = "Untitled";
            var currentName:String = baseName;
            var i:int = 1;
            while (nameExists(currentName))
                currentName = baseName + " " + i++;

            function nameExists(str:String):Boolean
            {
                for each (var p:ProjectData in ProjectManager.instance.projects)
                    if (p.name == str)
                        return true;
                return false;
            }

            return currentName;
        }

        public function get selectedName():String
        {
            return inputName.text;
        }

        private function cancelAndClose(event:MouseEvent):void
        {
            close();
        }

        private function confirmAndClose(event:MouseEvent):void
        {
            if (callbackConfirm != null) callbackConfirm.apply(this, [this]);
            close();
        }

        private function validateName():void
        {
            var valid:Boolean = ProjectManager.instance.validateNewName(inputName.text);
            groupImageNameValidation.includeInLayout = groupImageNameValidation.visible = !valid;
            buttonConfirm.enabled = valid;
        }

        private function onChangeInputName(event:TextOperationEvent):void
        {
            validateName();
        }
        ]]>
    </fx:Script>

    <s:VGroup gap="15"
              width="100%">

        <s:Label text="Import an existing World"
                 width="100%"
                 styleName="header"/>

        <s:VGroup id="groupImport"
                  width="100%">
            <!--Import Box-->
            <s:Panel width="100%"
                     skinClass="ui.skins.PanelSkinOutline">
                <s:VGroup width="100%"
                          height="100%"
                          horizontalAlign="center"
                          verticalAlign="middle"
                          gap="15"
                          padding="25">
                    <ui:ColorBitmapImage source="{Icons.DragAndDrop}"
                                         width="32"
                                         height="32"
                                         color="{Color.textMedium}"/>
                    <s:Label text="Drag and drop file here"/>
                    <s:Label text="or"/>
                    <s:Button label="Browse for file"/>
                </s:VGroup>
            </s:Panel>
        </s:VGroup>

        <s:Panel id="groupName"
                 skinClass="ui.skins.PanelSkinOutline"
                 width="100%">

            <s:VGroup width="100%"
                      height="100%"
                      gap="5">

                <s:Label text="Enter a Title for this World"
                         width="100%"/>
                <s:HGroup width="100%"
                          gap="10"
                          verticalAlign="middle">
                    <ui:IconTextInput id="inputName"
                                      icon="{Icons.Edit}"
                                      width="100%"
                                      change="onChangeInputName(event)"/>
                    <s:Group id="groupImageNameValidation"
                             toolTip="World names must be at least 1 character long and unique">
                        <ui:ColorBitmapImage id="imageNameValidation"
                                             width="16"
                                             height="16"
                                             source="{Icons.Error}"
                                             color="{Color.textHigh}"/>
                    </s:Group>
                </s:HGroup>

            </s:VGroup>

        </s:Panel>

        <s:HGroup width="100%"
                  horizontalAlign="right"
                  top="5">
            <s:Button id="buttonCancel"
                      label="Cancel"
                      click="cancelAndClose(event)"/>
            <s:Button id="buttonConfirm"
                      label="Create"
                      skinClass="ui.skins.ButtonThemeSkin"
                      click="confirmAndClose(event)"/>
        </s:HGroup>

    </s:VGroup>
</popups:Popup>
